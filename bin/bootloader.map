Archive member included to satisfy reference by file (symbol)

/opt/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib/libc_nano.a(lib_a-strlen.o)
                              out/Commands.o (strlen)

Discarded input sections

 .group         0x0000000000000000        0x8 out/main.o
 .group         0x0000000000000000        0x8 out/BootUtility.o
 .group         0x0000000000000000        0x8 out/BootUtility.o
 .group         0x0000000000000000        0x8 out/UART_Driver.o
 .group         0x0000000000000000        0x8 out/UART_Driver.o
 .text._ZN4GPIOC2EPV16GPIO_registers_t10GPIO_pin_t
                0x0000000000000000       0x26 out/UART_Driver.o

Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x0000000008000000 0x0000000000040000 xr
SRAM             0x0000000020000000 0x0000000000008000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD out/Commands.o
LOAD out/ControlStructure.o
LOAD out/main.o
LOAD out/stm32_startup.o
LOAD out/BootUtility.o
LOAD out/MCU_Utilities.o
LOAD out/m_memory.o
LOAD out/Clock_Driver.o
LOAD out/CRC_Driver.o
LOAD out/Flash_Driver.o
LOAD out/GPIO_Driver.o
LOAD out/NVIC_Drivers.o
LOAD out/SysTick.o
LOAD out/UART_Driver.o
LOAD /opt/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib/libstdc++_nano.a
LOAD /opt/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib/libm.a
START GROUP
LOAD /opt/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/libgcc.a
LOAD /opt/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib/libc_nano.a
END GROUP
START GROUP
LOAD /opt/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/libgcc.a
LOAD /opt/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib/libc_nano.a
LOAD /opt/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib/libnosys.a
END GROUP
START GROUP
LOAD /opt/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/libgcc.a
LOAD /opt/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib/libc_nano.a
LOAD /opt/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib/libnosys.a
END GROUP

.isr_vector     0x0000000008000000      0x194
                0x0000000008000000                . = ALIGN (0x4)
 *(.isr_vector)
 .isr_vector    0x0000000008000000      0x194 out/stm32_startup.o
                0x0000000008000000                vector_table
                0x0000000008000194                . = ALIGN (0x4)

.text           0x0000000008000194     0x23dc
                0x0000000008000194                . = ALIGN (0x4)
 *(.text*)
 .text          0x0000000008000194      0x670 out/Commands.o
                0x0000000008000194                BootGetVersion(unsigned char*, unsigned char, FrameType_t)
                0x0000000008000224                BootGetMCUID(unsigned char*, unsigned char, FrameType_t)
                0x00000000080002f4                BootFlashErase(unsigned char*, unsigned char, FrameType_t)
                0x00000000080003ec                BootFlashWrite(unsigned char*, unsigned char, FrameType_t)
                0x0000000008000558                BootFlashVerify(unsigned char*, unsigned char, FrameType_t)
                0x0000000008000574                BootReadFlashProtStatus(unsigned char*, unsigned char, FrameType_t)
                0x00000000080005d0                BootGetRWProt(unsigned char*, unsigned char, FrameType_t)
                0x000000000800068c                BootSetRWProt(unsigned char*, unsigned char, FrameType_t)
                0x0000000008000740                BootJumpToApplication(unsigned char*, unsigned char, FrameType_t)
 .text          0x0000000008000804      0x22c out/ControlStructure.o
                0x0000000008000804                BootControl()
 .text          0x0000000008000a30      0x180 out/main.o
                0x0000000008000af4                FLASH_INIT()
                0x0000000008000b00                main
 .text._ZN4GPIOC2EPV16GPIO_registers_t10GPIO_pin_t
                0x0000000008000bb0       0x26 out/main.o
                0x0000000008000bb0                GPIO::GPIO(GPIO_registers_t volatile*, GPIO_pin_t)
                0x0000000008000bb0                GPIO::GPIO(GPIO_registers_t volatile*, GPIO_pin_t)
 *fill*         0x0000000008000bd6        0x2 
 .text          0x0000000008000bd8       0xf4 out/stm32_startup.o
                0x0000000008000cb4                Reset_Handler()
 .text          0x0000000008000ccc       0x34 out/BootUtility.o
                0x0000000008000ccc                JumpToUserApp()
 .text._Z7SetVTORm
                0x0000000008000d00       0x1c out/BootUtility.o
                0x0000000008000d00                SetVTOR(unsigned long)
 .text._Z15SetStackPointerm
                0x0000000008000d1c       0x16 out/BootUtility.o
                0x0000000008000d1c                SetStackPointer(unsigned long)
 .text          0x0000000008000d32        0x0 out/MCU_Utilities.o
 .text          0x0000000008000d32       0x3a out/m_memory.o
                0x0000000008000d32                m_memcpy(void*, void const*, unsigned long)
 .text          0x0000000008000d6c       0xe0 out/Clock_Driver.o
                0x0000000008000d6c                Clock::EnableClock_USART2()
                0x0000000008000d88                Clock::EnableClock_GPIOA()
                0x0000000008000da4                Clock::EnableClock_GPIOB()
                0x0000000008000dc0                Clock::EnableClock_GPIOC()
                0x0000000008000ddc                Clock::EnableClock_GPIOD()
                0x0000000008000df8                Clock::EnableClock_GPIOE()
                0x0000000008000e14                Clock::EnableClock_GPIOH()
                0x0000000008000e30                Clock::EnableClock_CRC()
 .text          0x0000000008000e4c      0x124 out/CRC_Driver.o
                0x0000000008000e4c                CRC::CRC_Init()
                0x0000000008000e68                CRC::CRC_Reset()
                0x0000000008000e84                CRC::CRC_Read(unsigned long&)
                0x0000000008000ea4                CRC::CRC_ComputeWithAccumulate(unsigned char const*, unsigned char, unsigned long&)
                0x0000000008000f08                CRC::CRC_Compute(unsigned char const*, unsigned char, unsigned long&)
 .text          0x0000000008000f70      0x7ec out/Flash_Driver.o
                0x0000000008000f70                FLASH::GetOPStatus()
                0x0000000008000f94                FLASH::UnlockControlRegister()
                0x0000000008000fdc                FLASH::LockControlRegister()
                0x000000000800101c                FLASH::UnlockOptionControlRegister()
                0x0000000008001064                FLASH::LockOptionControlRegister()
                0x00000000080010a4                FLASH::MassErase()
                0x0000000008001130                FLASH::SectorErase(unsigned char const&)
                0x000000000800120c                FLASH::WriteFlash(void const*, void*, unsigned long)
                0x0000000008001428                FLASH::ReadProtOptionBytes(unsigned char&)
                0x000000000800144c                FLASH::GetSectorRWProtection(unsigned char const&, Flash_ProtLevel_t&)
                0x00000000080014e8                FLASH::SetSectorRWProtection(unsigned char const&)
                0x00000000080015f0                FLASH::Config(Flash_option_t, Flash_latency_t, Flash_parallel_t)
                0x000000000800162c                FLASH::Init()
                0x0000000008001670                FLASH::SetFlashProtectionMode(Flash_ProtMode_t const&)
                0x0000000008001710                FLASH::GetFlashProtectionMode(Flash_ProtMode_t&)
 .text          0x000000000800175c      0x230 out/GPIO_Driver.o
                0x000000000800175c                GPIO::Config(GPIO_port_mode_t, GPIO_port_output_config_t, GPIO_port_speed_t, GPIO_port_pull_t, GPIO_port_alternatefunction_t)
                0x000000000800179e                GPIO::Init()
                0x0000000008001900                GPIO::GPIO_ReadPin() const
                0x0000000008001938                GPIO::GPIO_WritePin(PIN_State_t)
 .text          0x000000000800198c      0x21c out/NVIC_Drivers.o
                0x000000000800198c                NVIC::NVIC_EnableInterrupt(unsigned char)
                0x00000000080019cc                NVIC::NVIC_DisableInterrupt(unsigned char)
                0x0000000008001a10                NVIC::NVIC_SetInterruptPending(unsigned char)
                0x0000000008001a54                NVIC::NVIC_ClearInterruptPending(unsigned char)
                0x0000000008001a98                NVIC::NVIC_GetInterruptPendingStatus(unsigned char)
                0x0000000008001ad8                NVIC::NVIC_SetInterruptPriority(unsigned char, unsigned char)
                0x0000000008001b20                NVIC::NVIC_GetInterruptPriority(unsigned char)
                0x0000000008001b5c                EnableAllInterrupts()
                0x0000000008001b72                DisableAllInterrupts()
                0x0000000008001b88                SetBasePriority(unsigned long)
 .text          0x0000000008001ba8       0xf8 out/SysTick.o
                0x0000000008001ba8                Systick_Interrupt()
                0x0000000008001bc4                SysTick::Enable()
                0x0000000008001be0                SysTick::Disable()
                0x0000000008001bfc                SysTick::SetReloadValue(unsigned long)
                0x0000000008001c1c                SysTick::SetTickSrc(SYSTICK_ClockSrc)
                0x0000000008001c54                SysTick::EnableInt()
                0x0000000008001c70                SysTick::DisableInt()
                0x0000000008001c8c                SysTick::GetGlobalTime()
 .text          0x0000000008001ca0      0x874 out/UART_Driver.o
                0x0000000008001ca0                USART::Config(USART_word_length_t, USART_parity_t, unsigned long, USART_num_stop_bits_t, bool, void (*)())
                0x0000000008001cf8                USART::ConfigBaudRate(unsigned long)
                0x0000000008001e08                USART::Init()
                0x0000000008001f70                USART::Transmit(char const*, unsigned long, unsigned long)
                0x00000000080020a6                USART::Read(unsigned char*, unsigned long, unsigned long)
                0x0000000008002168                USART::TransmitIT(char const*, unsigned long, unsigned long)
                0x0000000008002284                USART::ReadIT(unsigned char*, unsigned long, unsigned long)
                0x0000000008002370                USART2_Interrupt()
 .text._ZN5USARTC2EPV17USART_Registers_t
                0x0000000008002514       0x4e out/UART_Driver.o
                0x0000000008002514                USART::USART(USART_Registers_t volatile*)
                0x0000000008002514                USART::USART(USART_Registers_t volatile*)
 .text          0x0000000008002562        0xe /opt/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib/libc_nano.a(lib_a-strlen.o)
                0x0000000008002562                strlen
                0x0000000008002570                . = ALIGN (0x4)
                0x0000000008002570                _text_end = .

.glue_7         0x0000000008002570        0x0
 .glue_7        0x0000000008002570        0x0 linker stubs

.glue_7t        0x0000000008002570        0x0
 .glue_7t       0x0000000008002570        0x0 linker stubs

.vfp11_veneer   0x0000000008002570        0x0
 .vfp11_veneer  0x0000000008002570        0x0 linker stubs

.v4_bx          0x0000000008002570        0x0
 .v4_bx         0x0000000008002570        0x0 linker stubs

.iplt           0x0000000008002570        0x0
 .iplt          0x0000000008002570        0x0 out/Commands.o

.rel.dyn        0x0000000008002570        0x0
 .rel.iplt      0x0000000008002570        0x0 out/Commands.o

.data           0x0000000020000000       0x70 load address 0x0000000008002570
                0x0000000020000000                . = ALIGN (0x4)
                0x0000000020000000                _data_start = .
 *(.data*)
 .data          0x0000000020000000       0x50 out/Commands.o
                0x0000000020000004                serviceTable
 .data          0x0000000020000050        0x0 out/ControlStructure.o
 .data          0x0000000020000050        0x0 out/main.o
 .data          0x0000000020000050        0x0 out/stm32_startup.o
 .data          0x0000000020000050        0x0 out/BootUtility.o
 .data          0x0000000020000050        0x0 out/MCU_Utilities.o
 .data          0x0000000020000050        0x0 out/m_memory.o
 .data          0x0000000020000050        0x0 out/Clock_Driver.o
 .data          0x0000000020000050        0x1 out/CRC_Driver.o
                0x0000000020000050                CRC::currentState
 .data          0x0000000020000051        0x1 out/Flash_Driver.o
                0x0000000020000051                FLASH::currentState
 .data          0x0000000020000052        0x0 out/GPIO_Driver.o
 *fill*         0x0000000020000052        0x2 
 .data          0x0000000020000054       0x1c out/NVIC_Drivers.o
                0x0000000020000054                NVIC::registers
 .data          0x0000000020000070        0x0 out/SysTick.o
 .data          0x0000000020000070        0x0 out/UART_Driver.o
 .data          0x0000000020000070        0x0 /opt/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib/libc_nano.a(lib_a-strlen.o)
                0x0000000020000070                _data_end = .
                0x0000000020000070                . = ALIGN (0x4)

.igot.plt       0x0000000020000070        0x0 load address 0x00000000080025e0
 .igot.plt      0x0000000020000070        0x0 out/Commands.o

.rodata         0x00000000080025e0      0x758
                0x00000000080025e0                . = ALIGN (0x4)
 *(.rodata*)
 .rodata        0x00000000080025e0      0x100 out/Commands.o
                0x00000000080026df                NUMBER_OF_COMMANDS
 .rodata        0x00000000080026e0       0xa3 out/ControlStructure.o
 *fill*         0x0000000008002783        0x1 
 .rodata        0x0000000008002784      0x12a out/main.o
 *fill*         0x00000000080028ae        0x2 
 .rodata        0x00000000080028b0       0xdc out/BootUtility.o
 .rodata        0x000000000800298c       0x9c out/MCU_Utilities.o
 .rodata        0x0000000008002a28       0x64 out/Clock_Driver.o
                0x0000000008002a88                Clock::registers
 .rodata        0x0000000008002a8c       0x68 out/CRC_Driver.o
                0x0000000008002af0                CRC::registers
 .rodata        0x0000000008002af4       0x78 out/Flash_Driver.o
                0x0000000008002b68                FLASH::registers
 .rodata        0x0000000008002b6c       0x60 out/GPIO_Driver.o
 .rodata        0x0000000008002bcc       0x3a out/NVIC_Drivers.o
 *fill*         0x0000000008002c06        0x2 
 .rodata        0x0000000008002c08       0x38 out/SysTick.o
                0x0000000008002c3c                SysTick::registers
 .rodata        0x0000000008002c40       0xf4 out/UART_Driver.o
                0x0000000008002d34                . = ALIGN (0x4)
                0x0000000008002d34                _init_array_start = .
 *(SORT_BY_NAME(.init_array.*))
 *(.init_array)
 .init_array    0x0000000008002d34        0x4 out/UART_Driver.o
                0x0000000008002d38                _init_array_end = .
                0x0000000008002d38                . = ALIGN (0x4)

.bss            0x0000000020000070      0x364
                0x0000000020000070                . = ALIGN (0x4)
                0x0000000020000070                _bss_start = .
 *(.bss*)
 .bss           0x0000000020000070        0x2 out/Commands.o
 .bss           0x0000000020000072        0x0 out/ControlStructure.o
 .bss           0x0000000020000072        0x0 out/main.o
 *fill*         0x0000000020000072        0x2 
 .bss           0x0000000020000074        0x4 out/stm32_startup.o
                0x0000000020000074                bss_size
 .bss           0x0000000020000078        0x0 out/BootUtility.o
 .bss           0x0000000020000078        0x0 out/MCU_Utilities.o
 .bss           0x0000000020000078        0x0 out/m_memory.o
 .bss           0x0000000020000078        0x0 out/Clock_Driver.o
 .bss           0x0000000020000078        0x0 out/CRC_Driver.o
 .bss           0x0000000020000078        0x3 out/Flash_Driver.o
                0x0000000020000078                FLASH::prefetch
                0x0000000020000079                FLASH::latency
                0x000000002000007a                FLASH::paralellism
 .bss           0x000000002000007b        0x0 out/GPIO_Driver.o
 .bss           0x000000002000007b        0x0 out/NVIC_Drivers.o
 *fill*         0x000000002000007b        0x1 
 .bss           0x000000002000007c        0x4 out/SysTick.o
                0x000000002000007c                SysTick::globalTime
 .bss           0x0000000020000080      0x354 out/UART_Driver.o
                0x0000000020000080                USART2
                0x0000000020000094                USART1
                0x00000000200000a8                USART6
                0x00000000200000bc                USART::USART1_MessageStr
                0x00000000200001c4                USART::USART2_MessageStr
                0x00000000200002cc                USART::USART6_MessageStr
 .bss           0x00000000200003d4        0x0 /opt/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib/libc_nano.a(lib_a-strlen.o)
                0x00000000200003d4                _bss_end = .
                0x00000000200003d4                end = _bss_end
                0x00000000200003d4                . = ALIGN (0x4)
OUTPUT(bin/bootloader.elf elf32-littlearm)
LOAD linker stubs

.debug_info     0x0000000000000000     0x8e0c
 .debug_info    0x0000000000000000     0x1571 out/Commands.o
 .debug_info    0x0000000000001571      0xe4f out/ControlStructure.o
 .debug_info    0x00000000000023c0     0x179c out/main.o
 .debug_info    0x0000000000003b5c      0x20e out/stm32_startup.o
 .debug_info    0x0000000000003d6a      0x4ab out/BootUtility.o
 .debug_info    0x0000000000004215      0x35c out/MCU_Utilities.o
 .debug_info    0x0000000000004571      0x104 out/m_memory.o
 .debug_info    0x0000000000004675      0x652 out/Clock_Driver.o
 .debug_info    0x0000000000004cc7      0x7d8 out/CRC_Driver.o
 .debug_info    0x000000000000549f      0xcc3 out/Flash_Driver.o
 .debug_info    0x0000000000006162      0xaad out/GPIO_Driver.o
 .debug_info    0x0000000000006c0f      0x4ee out/NVIC_Drivers.o
 .debug_info    0x00000000000070fd      0x3d2 out/SysTick.o
 .debug_info    0x00000000000074cf     0x193d out/UART_Driver.o

.debug_abbrev   0x0000000000000000     0x1dc4
 .debug_abbrev  0x0000000000000000      0x3a0 out/Commands.o
 .debug_abbrev  0x00000000000003a0      0x308 out/ControlStructure.o
 .debug_abbrev  0x00000000000006a8      0x414 out/main.o
 .debug_abbrev  0x0000000000000abc      0x10f out/stm32_startup.o
 .debug_abbrev  0x0000000000000bcb       0xd4 out/BootUtility.o
 .debug_abbrev  0x0000000000000c9f       0x4d out/MCU_Utilities.o
 .debug_abbrev  0x0000000000000cec       0xa6 out/m_memory.o
 .debug_abbrev  0x0000000000000d92      0x14a out/Clock_Driver.o
 .debug_abbrev  0x0000000000000edc      0x26a out/CRC_Driver.o
 .debug_abbrev  0x0000000000001146      0x297 out/Flash_Driver.o
 .debug_abbrev  0x00000000000013dd      0x257 out/GPIO_Driver.o
 .debug_abbrev  0x0000000000001634      0x1af out/NVIC_Drivers.o
 .debug_abbrev  0x00000000000017e3      0x1ad out/SysTick.o
 .debug_abbrev  0x0000000000001990      0x434 out/UART_Driver.o

.debug_aranges  0x0000000000000000      0x1e0
 .debug_aranges
                0x0000000000000000       0x20 out/Commands.o
 .debug_aranges
                0x0000000000000020       0x20 out/ControlStructure.o
 .debug_aranges
                0x0000000000000040       0x28 out/main.o
 .debug_aranges
                0x0000000000000068       0x20 out/stm32_startup.o
 .debug_aranges
                0x0000000000000088       0x30 out/BootUtility.o
 .debug_aranges
                0x00000000000000b8       0x18 out/MCU_Utilities.o
 .debug_aranges
                0x00000000000000d0       0x20 out/m_memory.o
 .debug_aranges
                0x00000000000000f0       0x20 out/Clock_Driver.o
 .debug_aranges
                0x0000000000000110       0x20 out/CRC_Driver.o
 .debug_aranges
                0x0000000000000130       0x20 out/Flash_Driver.o
 .debug_aranges
                0x0000000000000150       0x20 out/GPIO_Driver.o
 .debug_aranges
                0x0000000000000170       0x20 out/NVIC_Drivers.o
 .debug_aranges
                0x0000000000000190       0x20 out/SysTick.o
 .debug_aranges
                0x00000000000001b0       0x30 out/UART_Driver.o

.debug_line     0x0000000000000000     0x2e3c
 .debug_line    0x0000000000000000      0x682 out/Commands.o
 .debug_line    0x0000000000000682      0x3f2 out/ControlStructure.o
 .debug_line    0x0000000000000a74      0x401 out/main.o
 .debug_line    0x0000000000000e75      0x190 out/stm32_startup.o
 .debug_line    0x0000000000001005      0x1ad out/BootUtility.o
 .debug_line    0x00000000000011b2      0x102 out/MCU_Utilities.o
 .debug_line    0x00000000000012b4      0x11b out/m_memory.o
 .debug_line    0x00000000000013cf      0x1ab out/Clock_Driver.o
 .debug_line    0x000000000000157a      0x21f out/CRC_Driver.o
 .debug_line    0x0000000000001799      0x68e out/Flash_Driver.o
 .debug_line    0x0000000000001e27      0x444 out/GPIO_Driver.o
 .debug_line    0x000000000000226b      0x1f4 out/NVIC_Drivers.o
 .debug_line    0x000000000000245f      0x1a1 out/SysTick.o
 .debug_line    0x0000000000002600      0x83c out/UART_Driver.o

.debug_str      0x0000000000000000     0x27cd
 .debug_str     0x0000000000000000     0x131f out/Commands.o
                                       0x1614 (size before relaxing)
 .debug_str     0x000000000000131f      0x1e6 out/ControlStructure.o
                                        0xd3c (size before relaxing)
 .debug_str     0x0000000000001505      0x6c6 out/main.o
                                       0x1a84 (size before relaxing)
 .debug_str     0x0000000000001bcb       0xdf out/stm32_startup.o
                                        0x22b (size before relaxing)
 .debug_str     0x0000000000001caa       0x92 out/BootUtility.o
                                        0x4e4 (size before relaxing)
 .debug_str     0x0000000000001d3c       0x20 out/MCU_Utilities.o
                                        0x3f5 (size before relaxing)
 .debug_str     0x0000000000001d5c       0x3b out/m_memory.o
                                        0x18d (size before relaxing)
 .debug_str     0x0000000000001d97      0x3dd out/Clock_Driver.o
                                        0x6ec (size before relaxing)
 .debug_str     0x0000000000002174       0x47 out/CRC_Driver.o
                                        0x7df (size before relaxing)
 .debug_str     0x00000000000021bb      0x1a2 out/Flash_Driver.o
                                        0xcce (size before relaxing)
 .debug_str     0x000000000000235d       0x1e out/GPIO_Driver.o
                                        0xa2b (size before relaxing)
 .debug_str     0x000000000000237b       0xb4 out/NVIC_Drivers.o
                                        0x5c3 (size before relaxing)
 .debug_str     0x000000000000242f       0xb4 out/SysTick.o
                                        0x4a9 (size before relaxing)
 .debug_str     0x00000000000024e3      0x2ea out/UART_Driver.o
                                       0x17bd (size before relaxing)

.comment        0x0000000000000000       0x49
 .comment       0x0000000000000000       0x49 out/Commands.o
                                         0x4a (size before relaxing)
 .comment       0x0000000000000049       0x4a out/ControlStructure.o
 .comment       0x0000000000000049       0x4a out/main.o
 .comment       0x0000000000000049       0x4a out/stm32_startup.o
 .comment       0x0000000000000049       0x4a out/BootUtility.o
 .comment       0x0000000000000049       0x4a out/MCU_Utilities.o
 .comment       0x0000000000000049       0x4a out/m_memory.o
 .comment       0x0000000000000049       0x4a out/Clock_Driver.o
 .comment       0x0000000000000049       0x4a out/CRC_Driver.o
 .comment       0x0000000000000049       0x4a out/Flash_Driver.o
 .comment       0x0000000000000049       0x4a out/GPIO_Driver.o
 .comment       0x0000000000000049       0x4a out/NVIC_Drivers.o
 .comment       0x0000000000000049       0x4a out/SysTick.o
 .comment       0x0000000000000049       0x4a out/UART_Driver.o

.ARM.attributes
                0x0000000000000000       0x2c
 .ARM.attributes
                0x0000000000000000       0x2e out/Commands.o
 .ARM.attributes
                0x000000000000002e       0x2e out/ControlStructure.o
 .ARM.attributes
                0x000000000000005c       0x2e out/main.o
 .ARM.attributes
                0x000000000000008a       0x2e out/stm32_startup.o
 .ARM.attributes
                0x00000000000000b8       0x2e out/BootUtility.o
 .ARM.attributes
                0x00000000000000e6       0x2e out/MCU_Utilities.o
 .ARM.attributes
                0x0000000000000114       0x2e out/m_memory.o
 .ARM.attributes
                0x0000000000000142       0x2e out/Clock_Driver.o
 .ARM.attributes
                0x0000000000000170       0x2e out/CRC_Driver.o
 .ARM.attributes
                0x000000000000019e       0x2e out/Flash_Driver.o
 .ARM.attributes
                0x00000000000001cc       0x2e out/GPIO_Driver.o
 .ARM.attributes
                0x00000000000001fa       0x2e out/NVIC_Drivers.o
 .ARM.attributes
                0x0000000000000228       0x2e out/SysTick.o
 .ARM.attributes
                0x0000000000000256       0x2e out/UART_Driver.o
 .ARM.attributes
                0x0000000000000284       0x1c /opt/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib/libc_nano.a(lib_a-strlen.o)

.debug_frame    0x0000000000000000      0xdf4
 .debug_frame   0x0000000000000000      0x180 out/Commands.o
 .debug_frame   0x0000000000000180       0xc8 out/ControlStructure.o
 .debug_frame   0x0000000000000248      0x134 out/main.o
 .debug_frame   0x000000000000037c       0x98 out/stm32_startup.o
 .debug_frame   0x0000000000000414       0x84 out/BootUtility.o
 .debug_frame   0x0000000000000498       0x38 out/m_memory.o
 .debug_frame   0x00000000000004d0      0x110 out/Clock_Driver.o
 .debug_frame   0x00000000000005e0       0xc0 out/CRC_Driver.o
 .debug_frame   0x00000000000006a0      0x234 out/Flash_Driver.o
 .debug_frame   0x00000000000008d4       0xac out/GPIO_Driver.o
 .debug_frame   0x0000000000000980      0x190 out/NVIC_Drivers.o
 .debug_frame   0x0000000000000b10      0x120 out/SysTick.o
 .debug_frame   0x0000000000000c30      0x1c4 out/UART_Driver.o

.debug_ranges   0x0000000000000000       0x58
 .debug_ranges  0x0000000000000000       0x18 out/main.o
 .debug_ranges  0x0000000000000018       0x20 out/BootUtility.o
 .debug_ranges  0x0000000000000038       0x20 out/UART_Driver.o
